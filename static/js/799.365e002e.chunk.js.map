{"version":3,"file":"static/js/799.365e002e.chunk.js","mappings":"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","sources":["Components/MovieCard/MovieCard.jsx","Components/header/Header.js","Components/MovieList/MovieList.js","Components/Pagination/Pagination.js","pages/HomePage/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { FaHeart } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addMovieToList, removeMovieFromList } from \"../../Store/Slices/FavoritesSlice.js\";\r\n\r\nfunction MovieCard({ movie }) {\r\n  const dispatch = useDispatch();\r\n  const isFavorite = useSelector((state) => \r\n    state.favList.favList.some((favMovie) => favMovie?.id === movie?.id)\r\n  );\r\n  const [isFavoriteLocal, setIsFavoriteLocal] = useState(isFavorite);\r\n\r\n  useEffect(() => {\r\n    setIsFavoriteLocal(isFavorite);\r\n  }, [isFavorite]);\r\n\r\n  const handleClick = () => {\r\n    setIsFavoriteLocal((prev) => {\r\n      const newFavoriteStatus = !prev;\r\n      if (newFavoriteStatus) {\r\n        dispatch(addMovieToList(movie));\r\n      } else {\r\n        dispatch(removeMovieFromList(movie.id));\r\n      }\r\n      return newFavoriteStatus;\r\n    });\r\n  };\r\n\r\n  const currentTheme = document.body.classList.contains(\"dark-mode\") ? \"darkmode\" : \"lightmode\";\r\n  \r\n  const getBorderColor = (rating) => {\r\n    if (rating >= 80) return \"#00ff00\";\r\n    if (rating >= 60) return \"yellow\";\r\n    if (rating >= 50) return \"orange\";\r\n    return \"red\";\r\n  };\r\n\r\n  const rating = Math.round(movie.vote_average * 10);\r\n  const borderColor = getBorderColor(rating);\r\n\r\n  const ratingCircleStyle = {\r\n    position: \"absolute\",\r\n    bottom: \"-15px\",\r\n    border: `5px solid ${borderColor}`,\r\n    left: \"10px\",\r\n    width: \"40px\",\r\n    height: \"40px\",\r\n    borderRadius: \"50%\",\r\n    backgroundColor: \"#1e2533\",\r\n    color: \"#87ceeb\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"14px\",\r\n  };\r\n\r\n  return (\r\n    <div style={cardStyle[currentTheme]}>\r\n      <div style={imageWrapperStyle}>\r\n        <img\r\n          src={\r\n            movie.poster_path\r\n              ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\r\n              : \"default-poster-path.jpg\"\r\n          }\r\n          alt={movie.title}\r\n          style={imageStyle}\r\n        />\r\n        <div style={ratingCircleStyle}>\r\n          <span>{rating}</span>\r\n        </div>\r\n      </div>\r\n      <div style={cardContentStyle}>\r\n        <h3 style={titleStyle}>{movie.title}</h3>\r\n        <p style={dateStyle}>{new Date(movie.release_date).toDateString()}</p>\r\n        <div style={favoriteWrapperStyle}>\r\n          <FaHeart\r\n            style={{\r\n              color: isFavoriteLocal ? \"#ffeb3b\" : \"gray\",\r\n              fontSize: \"20px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n            onClick={handleClick}\r\n          />\r\n        </div>\r\n        <Link to={`/movie/${movie.id}`}>\r\n          <button className=\"btn btn-outline-warning mb-3\">View Details</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst cardStyle = {\r\n  lightmode: {\r\n\r\n    border:\"1px solid white\",\r\n    color:\"black\",\r\n    width: \"200px\",\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"10px\",\r\n    overflow: \"hidden\",\r\n    boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\r\n    margin: \"10px\",\r\n    textAlign: \"center\",\r\n    position: \"relative\",\r\n  },\r\n  darkmode: {\r\n    width: \"200px\",\r\n    backgroundColor: \"#333\",\r\n    borderRadius: \"10px\",\r\n    overflow: \"hidden\",\r\n    boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\r\n    margin: \"10px\",\r\n    textAlign: \"center\",\r\n    position: \"relative\",\r\n    color: \"white\",\r\n  },\r\n};\r\n\r\nconst imageWrapperStyle = {\r\n  position: \"relative\",\r\n  borderRadius: \"15px\",\r\n};\r\n\r\nconst imageStyle = {\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  objectFit: \"cover\",\r\n  marginBottom: \"10px\",\r\n};\r\n\r\nconst cardContentStyle = {\r\n  padding: \"10px\",\r\n  position: \"relative\",\r\n};\r\n\r\nconst titleStyle = {\r\n  marginTop: \"15px\",\r\n  fontSize: \"18px\",\r\n  height: \"50px\",\r\n  marginBottom: \"15px\",\r\n};\r\n\r\nconst dateStyle = {\r\n  marginBottom: \"10px\",\r\n  fontSize: \"14px\",\r\n  color: \"#888\",\r\n};\r\n\r\nconst favoriteWrapperStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"35px\",\r\n  right: \"10px\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n};\r\n\r\nexport default MovieCard;\r\n","import React, { useState, useRef } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction Header({ onSearch }) {\r\n  const searchInputRef = useRef(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const currentTheme = document.body.classList.contains(\"dark-mode\") ? \"darkmode\" : \"lightmode\";\r\n\r\n  const handleChange = (e) => {\r\n    setSearchQuery(e.target.value);\r\n    onSearch(e.target.value); \r\n  };\r\n\r\n  const handleSearch = () => {\r\n    const query = searchInputRef.current.value;\r\n    onSearch(query);\r\n    setSearchQuery(''); \r\n    searchInputRef.current.value = ''; \r\n  };\r\n\r\n  return (\r\n    <header className='headBar' style={headerStyle[currentTheme]}>\r\n      <div style={containerStyle[currentTheme]}>\r\n        <h1>Welcome to our movie app</h1>\r\n        <p>Millions of movies, TV shows, and people to discover. Explore now.</p>\r\n        <div style={searchContainerStyle[currentTheme]}>\r\n          <input\r\n            ref={searchInputRef}\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n            value={searchQuery}\r\n            onChange={handleChange}\r\n            onKeyDown={(e) => e.key === 'Enter' && handleSearch()}\r\n            style={searchBarStyle[currentTheme]}\r\n          />\r\n          <button onClick={handleSearch} style={searchButtonStyle}>Search</button>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nconst headerStyle = {\r\n  lightmode: {\r\n    backgroundColor: '#f1f1f1',\r\n    padding: '20px',\r\n    color: \"black\",\r\n  },\r\n  darkmode: {\r\n    backgroundColor: '#333',\r\n    padding: '20px',\r\n    color: 'white',\r\n  }\r\n};\r\n\r\nconst containerStyle = {\r\n  lightmode: {\r\n    maxWidth: '1200px',\r\n    margin: 'auto',\r\n    textAlign: 'left',\r\n    paddingLeft: '10px',\r\n    backgroundColor: '#f1f1f1',\r\n    color: \"black\",\r\n  },\r\n  darkmode: {\r\n    maxWidth: '1200px',\r\n    margin: 'auto',\r\n    textAlign: 'left',\r\n    paddingLeft: '10px',\r\n    backgroundColor: '#333',\r\n    color: 'white',\r\n  }\r\n};\r\n\r\nconst searchContainerStyle = {\r\n  lightmode: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginTop: '10px',\r\n    backgroundColor: '#f1f1f1',\r\n    color: \"black\",\r\n  },\r\n  darkmode: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginTop: '10px',\r\n    backgroundColor: '#333',\r\n    color: 'white',\r\n  }\r\n};\r\n\r\nconst searchBarStyle = {\r\n  darkmode: {\r\n    flex: '1',\r\n    padding: '10px',\r\n    borderRadius: '5px',\r\n    border: '1px solid #ccc',\r\n    marginRight: '10px',\r\n    backgroundColor: 'black',\r\n    color: 'white',\r\n    fontFamily: 'Arial, sans-serif',\r\n    fontSize: '16px',\r\n    fontWeight: 'bold',\r\n  },\r\n  lightmode: {\r\n    flex: '1',\r\n    padding: '10px',\r\n    borderRadius: '5px',\r\n    border: '1px solid #ccc',\r\n    marginRight: '10px',\r\n    backgroundColor: 'white',\r\n    color: 'black',\r\n    fontFamily: 'Arial, sans-serif',\r\n    fontSize: '16px',\r\n    fontWeight: 'bold',\r\n  }\r\n};\r\n\r\nconst searchButtonStyle = {\r\n  padding: '10px 20px',\r\n  color: '#333',\r\n  backgroundColor: \"#ffeb3b\",\r\n  border: '1px solid yellow',\r\n  borderRadius: '5px',\r\n  boxShadow: '2px 2px 4px rgba(0, 0, 0, 0.3)',\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport MovieCard from \"../../Components/MovieCard/MovieCard\";\r\n\r\nfunction MovieList({ movies }) {\r\n  return (\r\n    <div style={listStyle}>\r\n      {movies.map((movie) => (\r\n        <MovieCard key={movie.id} movie={movie} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst listStyle = {\r\n  display: \"flex\",\r\n  flexWrap: \"wrap\",\r\n  justifyContent: \"center\",\r\n};\r\n\r\nexport default MovieList;\r\n","import React from \"react\";\r\n\r\nfunction Pagination({ currentPage, totalPages, onPageChange }) {\r\n  const currentTheme = document.body.classList.contains(\"dark-mode\") ? \"darkmode\" : \"lightmode\";\r\n\r\n  return (\r\n    <div style={paginationContainerStyle[currentTheme]}>\r\n      <button\r\n        style={{\r\n          ...buttonStyle,\r\n          ...leftButtonStyle,\r\n          ...(currentPage === 1 && disabledButtonStyle),\r\n        }}\r\n        onClick={() => onPageChange(currentPage - 1)}\r\n        disabled={currentPage === 1}\r\n      >\r\n        &lt;\r\n      </button>\r\n      <span style={pageInfoStyle}>\r\n        {currentPage} / {totalPages}\r\n      </span>\r\n      <button\r\n        style={{\r\n          ...buttonStyle,\r\n          ...rightButtonStyle,\r\n          ...(currentPage === totalPages && disabledButtonStyle),\r\n        }}\r\n        onClick={() => onPageChange(currentPage + 1)}\r\n        disabled={currentPage === totalPages}\r\n      >\r\n        &gt;\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst paginationContainerStyle = {\r\n  lightmode: {\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  padding: \"20px\",\r\n  backgroundColor: \"white\",\r\n  },\r\n  darkmode: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: \"20px\",\r\n    backgroundColor: \"black\",\r\n  }\r\n};\r\n\r\nconst buttonStyle = {\r\n  backgroundColor: \"#ffeb3b\",\r\n  color: \"#1e2533\",\r\n  border: \"none\",\r\n  padding: \"10px 15px\",\r\n  borderRadius: \"5px\",\r\n  cursor: \"pointer\",\r\n  fontWeight: \"bold\",\r\n  fontSize: \"16px\",\r\n  margin: \"0 5px\",\r\n  transition: \"background-color 0.3s ease\",\r\n};\r\n\r\nconst leftButtonStyle = {\r\n  borderTopLeftRadius: \"20px\",\r\n  borderBottomLeftRadius: \"20px\",\r\n};\r\n\r\nconst rightButtonStyle = {\r\n  borderTopRightRadius: \"20px\",\r\n  borderBottomRightRadius: \"20px\",\r\n};\r\n\r\nconst disabledButtonStyle = {\r\n  backgroundColor: \"#b3b3b3\",\r\n  cursor: \"not-allowed\",\r\n};\r\n\r\nconst pageInfoStyle = {\r\n  color: \"#ffeb3b\",\r\n  fontWeight: \"bold\",\r\n  fontSize: \"16px\",\r\n  margin: \"0 10px\",\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"../../Components/header/Header\";\r\nimport MovieList from \"../../Components/MovieList/MovieList\";\r\nimport Pagination from \"../../Components/Pagination/Pagination\";\r\n\r\nconst MoviesPage = () => {\r\n  const [moviesData, setMoviesData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const moviesPerPage = 12;\r\n\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `https://api.themoviedb.org/3/movie/popular?api_key=d406d67947f4328b84625ac0a728bd14&page=${currentPage}`\r\n        );\r\n        const data = await response.json();\r\n        setMoviesData(data.results || []);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching the movies:\", error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMovies();\r\n  }, [currentPage]);\r\n\r\n  const handleSearch = (query) => {\r\n    setSearchQuery(query);\r\n    setCurrentPage(1); // Reset to first page on new search\r\n  };\r\n\r\n  const filteredMovies = moviesData.filter(movie =>\r\n    movie.title.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n  const totalPages = Math.ceil(filteredMovies.length / moviesPerPage);\r\n\r\n  const handlePageChange = (page) => {\r\n    if (page > 0 && page <= totalPages) {\r\n      setCurrentPage(page);\r\n    }\r\n  };\r\n\r\n  const currentMovies = filteredMovies.slice(\r\n    (currentPage - 1) * moviesPerPage,\r\n    currentPage * moviesPerPage\r\n  );\r\n\r\n  const currentTheme = document.body.classList.contains(\"dark-mode\") ? \"darkmode\" : \"lightmode\";\r\n  const notFoundStyle = {\r\n    fontSize: '50px',\r\n    color: currentTheme === 'darkmode' ? 'white' : 'grey',\r\n    textAlign: 'center',\r\n    marginTop: '20px',\r\n    fontWeight: 'bold',\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header onSearch={handleSearch} />\r\n      <section style={sectionStyle[currentTheme]}>\r\n        <h2>Popular Movies</h2>\r\n        {loading ? (\r\n          <p>Loading movies...</p>\r\n        ): filteredMovies.length === 0 ? (\r\n            <p style={notFoundStyle}>No Movies Found</p>\r\n        ) : (\r\n          <>\r\n            <MovieList movies={currentMovies} />\r\n            {filteredMovies.length > 0 && (\r\n              <Pagination\r\n                currentPage={currentPage}\r\n                totalPages={totalPages}\r\n                onPageChange={handlePageChange}\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst sectionStyle = {\r\n  \r\n  lightmode: {\r\n    padding: \"20px\",\r\n    backgroundColor: \"#f8f9fa\",\r\n    color:\"black\",\r\n    \r\n  },\r\n  darkmode: {\r\n    padding: \"20px\",\r\n    backgroundColor: \"black\",\r\n    color: \"white\",\r\n  }\r\n};\r\n\r\n\r\nexport default MoviesPage;\r\n"],"names":["cardStyle","lightmode","border","color","width","backgroundColor","borderRadius","overflow","boxShadow","margin","textAlign","position","darkmode","imageWrapperStyle","imageStyle","height","objectFit","marginBottom","cardContentStyle","padding","titleStyle","marginTop","fontSize","dateStyle","favoriteWrapperStyle","bottom","right","display","justifyContent","alignItems","_ref","movie","dispatch","useDispatch","isFavorite","useSelector","state","favList","some","favMovie","id","isFavoriteLocal","setIsFavoriteLocal","useState","useEffect","currentTheme","document","body","classList","contains","rating","Math","round","vote_average","ratingCircleStyle","getBorderColor","left","fontWeight","_jsxs","style","children","_jsx","src","poster_path","alt","title","Date","release_date","toDateString","FaHeart","cursor","onClick","handleClick","prev","newFavoriteStatus","addMovieToList","removeMovieFromList","Link","to","className","headerStyle","containerStyle","maxWidth","paddingLeft","searchContainerStyle","searchBarStyle","flex","marginRight","fontFamily","searchButtonStyle","onSearch","searchInputRef","useRef","searchQuery","setSearchQuery","handleSearch","query","current","value","ref","type","placeholder","onChange","e","target","onKeyDown","key","listStyle","flexWrap","movies","map","MovieCard","paginationContainerStyle","buttonStyle","transition","leftButtonStyle","borderTopLeftRadius","borderBottomLeftRadius","rightButtonStyle","borderTopRightRadius","borderBottomRightRadius","disabledButtonStyle","pageInfoStyle","currentPage","totalPages","onPageChange","disabled","sectionStyle","MoviesPage","moviesData","setMoviesData","loading","setLoading","setCurrentPage","async","response","fetch","data","json","results","error","console","fetchMovies","filteredMovies","filter","toLowerCase","includes","ceil","length","currentMovies","slice","notFoundStyle","Header","_Fragment","MovieList","Pagination","page"],"sourceRoot":""}